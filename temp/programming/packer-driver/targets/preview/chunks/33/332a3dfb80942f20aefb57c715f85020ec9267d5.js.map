{"version":3,"sources":["file:///D:/cocos%20creator%20project/TeamBattle/assets/resources/scripts/BossManager.ts"],"names":["_decorator","Component","Node","Prefab","instantiate","Vec3","UITransform","Rect","CCFloat","CCInteger","isValid","ccclass","property","BossManager","type","tooltip","activeBosses","spawnBounds","start","bossPrefab","console","warn","enabled","spawnAreaNode","calculateSpawnBounds","spawnInterval","schedule","trySpawnBoss","log","uiTransform","getComponent","worldPosition","x","y","getBoundingBoxToWorld","toFixed","width","height","filter","boss","length","maxBosses","spawnBoss","spawnPos","newBoss","node","addChild","setWorldPosition","push","onBossDestroyed","bossNode","index","indexOf","splice","getActiveBosses","getNearestBoss","position","bosses","nearestBoss","minDistanceSq","Infinity","forEach","distanceSq","squaredDistance"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Prefab, instantiate, Vec3, UITransform, Rect, CCFloat, CCInteger, isValid } from 'cc';\nconst { ccclass, property } = _decorator;\n\n// 引入 Boss 控制脚本 (假设我们后面会创建它)\n// import { BossControl } from './BossControl'; \n\n/**\n * 管理 Boss 在指定区域内的生成。\n */\n@ccclass('BossManager')\nexport class BossManager extends Component {\n\n    @property({\n        type: Prefab,\n        tooltip: 'Boss 的预制体资源'\n    })\n    bossPrefab: Prefab = null;\n\n    @property({\n        type: Node,\n        tooltip: 'Boss 生成的区域节点 (例如你的 Map 节点)'\n    })\n    spawnAreaNode: Node = null;\n\n    @property({\n        type: CCFloat,\n        tooltip: 'Boss 生成的时间间隔 (秒)，0 或负数表示不自动生成'\n    })\n    spawnInterval: number = 10.0;\n\n    @property({\n        type: CCInteger,\n        tooltip: '场上允许存在的最大 Boss 数量'\n    })\n    maxBosses: number = 1;\n\n    /**\n     * 当前存活的 Boss 节点列表\n     * @internal\n     */\n    protected activeBosses: Node[] = [];\n\n    /**\n     * Boss 生成区域的边界 (世界坐标)\n     * @internal\n     */\n    protected spawnBounds: Rect = null;\n\n    start() {\n        if (!this.bossPrefab) {\n            console.warn('BossManager: Boss Prefab 未指定!');\n            this.enabled = false;\n            return;\n        }\n        if (!this.spawnAreaNode) {\n            console.warn('BossManager: Spawn Area Node 未指定!');\n            this.enabled = false;\n            return;\n        }\n\n        this.calculateSpawnBounds();\n\n        if (this.spawnInterval > 0) {\n            this.schedule(this.trySpawnBoss, this.spawnInterval);\n            console.log(`BossManager: 已启动 Boss 生成定时器，间隔: ${this.spawnInterval}秒`);\n            this.trySpawnBoss(); \n        } else {\n            console.log('BossManager: spawnInterval <= 0, 不会自动生成 Boss。');\n        }\n    }\n\n    /**\n     * 计算生成区域节点的世界坐标边界框。\n     */\n    calculateSpawnBounds() {\n        const uiTransform = this.spawnAreaNode.getComponent(UITransform);\n        if (!uiTransform) {\n            console.warn('BossManager: Spawn Area Node 缺少 UITransform 组件!');\n            this.spawnBounds = new Rect(this.spawnAreaNode.worldPosition.x - 50, this.spawnAreaNode.worldPosition.y - 50, 100, 100);\n            return;\n        }\n        this.spawnBounds = uiTransform.getBoundingBoxToWorld();\n        console.log(`BossManager: 生成区域边界计算完成 (世界坐标): x=${this.spawnBounds.x.toFixed(0)}, y=${this.spawnBounds.y.toFixed(0)}, w=${this.spawnBounds.width.toFixed(0)}, h=${this.spawnBounds.height.toFixed(0)}`);\n    }\n\n    /**\n     * 如果未达到最大数量限制，尝试生成一个 Boss。\n     */\n    trySpawnBoss() {\n        this.activeBosses = this.activeBosses.filter(boss => boss && isValid(boss, true));\n        if (this.activeBosses.length >= this.maxBosses) {\n            return;\n        }\n        this.spawnBoss();\n    }\n\n    /**\n     * 在生成边界内的一个随机位置生成一个 Boss。\n     * (修改为：在固定位置生成以便测试)\n     */\n    spawnBoss() {\n        const spawnPos = new Vec3(150, 0, 0); \n        console.warn(`BossManager: Spawning Boss at fixed test position: (${spawnPos.x}, ${spawnPos.y})`); \n\n        const newBoss = instantiate(this.bossPrefab);\n        if (!newBoss) {\n            console.warn('BossManager: 实例化 Boss Prefab 失败!');\n            return;\n        }\n\n        this.node.addChild(newBoss);\n        newBoss.setWorldPosition(spawnPos); \n        this.activeBosses.push(newBoss);\n        console.log(`BossManager: Boss 已在 (${spawnPos.x.toFixed(0)}, ${spawnPos.y.toFixed(0)}) 生成! 当前数量: ${this.activeBosses.length}`);\n\n        // 获取 BossControl 脚本并设置回调 (如果需要)\n        // const bossControl = newBoss.getComponent(BossControl);\n        // if (bossControl) {\n        //     bossControl.init(this); // 假设 BossControl 有一个 init 方法接收 BossManager 引用\n        // }\n\n        // TODO: 发出 Boss 生成事件，通知 SquadManager 等系统\n        // this.node.emit('boss-spawned', newBoss);\n    }\n\n    /**\n     * 当一个 Boss 被销毁时由 BossControl 调用。\n     * @param bossNode 被销毁的 Boss 节点\n     */\n    onBossDestroyed(bossNode: Node) {\n        const index = this.activeBosses.indexOf(bossNode);\n        if (index !== -1) {\n            this.activeBosses.splice(index, 1);\n            console.log(`BossManager: 一个 Boss 被销毁。当前数量: ${this.activeBosses.length}`);\n        } else {\n            console.warn('BossManager: 尝试移除一个不在列表中的 Boss。');\n        }\n        // 如果数量低于上限，可以考虑立即尝试生成新的？或者等待下一个间隔\n        // this.trySpawnBoss();\n    }\n\n    /**\n     * 获取当前存活的 Boss 节点列表。\n     * @returns 活动 Boss 列表\n     */\n    public getActiveBosses(): Node[] {\n        // 返回前再次过滤无效节点，确保列表干净\n        this.activeBosses = this.activeBosses.filter(boss => boss && isValid(boss, true));\n        return this.activeBosses;\n    }\n\n    /**\n     * 获取距离指定位置最近的存活 Boss。\n     * @param position 参考位置 (世界坐标)\n     * @returns 最近的 Boss 节点，如果没有存活 Boss 则返回 null。\n     */\n    public getNearestBoss(position: Vec3): Node | null {\n        const bosses = this.getActiveBosses();\n        if (bosses.length === 0) {\n            return null;\n        }\n\n        let nearestBoss: Node = null;\n        let minDistanceSq = Infinity;\n\n        bosses.forEach(boss => {\n            const distanceSq = Vec3.squaredDistance(position, boss.worldPosition);\n            if (distanceSq < minDistanceSq) {\n                minDistanceSq = distanceSq;\n                nearestBoss = boss;\n            }\n        });\n\n        return nearestBoss;\n    }\n} "]}